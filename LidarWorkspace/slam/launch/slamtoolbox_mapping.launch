<?xml version="1.0"?>
<launch>
        <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] [${node}]: ${message}"/>
        <!-- Launch simulation environment -->
        <arg name="world_file" default="$(find slam)/worlds/world.world"/>
        <node name="gazebo" pkg="gazebo_ros" type="gazebo" args="$(arg world_file)"/>


        <!-- Static Transform Publications -->
        <node  pkg="tf2_ros" 
                type="static_transform_publisher" 
                name="map"
                args="0  0  0  0  0  0   map   odom"/>

        <node  pkg="tf2_ros" 
                type="static_transform_publisher" 
                name="odom"
                args="0  0  0  0  0  0   odom   base_link"/>

        <include file="$(find slam)/launch/rviz.launch"></include>

        <!-- Launch slam_toolbox mapper -->
        <node pkg="slam_toolbox" type="async_slam_toolbox_node" name="slam_toolbox" output="screen">
                <rosparam command="load" file="$(find slam)/config/mapper_params_online_async.yaml" />
        </node>

        <rosparam file="$(find slam)/config/config.yaml" command="load" />

        <!-- Launch nodes -->
        <node pkg="localisation" type="localisation.py" name="localisation" output="screen"/>
        <node pkg="puzzlebot_sim" type="puzzlebot_kinematic_model.py" name="puzzlebot_kinematic_model" output="screen"/>
        <node pkg="move_to_tag" type="pose_controller.py" name="pose_controller" output="screen"/>
        <node pkg="move_to_tag" type="orientation_controller.py" name="orientation_controller" output="screen"/>
</launch>
